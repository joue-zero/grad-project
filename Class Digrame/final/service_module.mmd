classDiagram
    direction LR
    
    %% =============== PART 2B: SERVICE CATALOG MODULE ===============

    %% -------------- Core References (External) --------------
    class User_model {
        
    }


    %% -------------- Service Models (Database Entities) --------------
    class Service_model {
        <<abstract>>
        +id : integer
        +user_id : foreignId
        +name : string
        +description : text
        +base_price : decimal
        +rating : decimal
        +location : string
        +is_active : boolean
        +service_type : string
        +created_at : timestamp
        +updated_at : timestamp
        +calculatePrice(pricingModel)
        +updateRating()
    }

    class Venue_model {
        +capacity : integer
        +venue_type : string
        +amenities : json
        +address : string
        +city : string
        +state : string
        +country : string
        +calculatePrice(pricingModel)
        +checkAvailability(date, timeSlot)
    }

    class EventService_model {
        +service_type : string
        +duration : integer
        +is_onsite : boolean
        +equipment_provided : json
        +calculatePrice(pricingModel)
        +checkAvailability(date, timeSlot)
    }

    %% -------------- Review & Time Management Models --------------
    class Review_model {
        +id : integer
        +user_id : foreignId
        +service_id : foreignId
        +booking_id : foreignId
        +rating : integer
        +comment : text
        +is_approved : boolean
        +created_at : timestamp
        +updated_at : timestamp
        +approve()
        +reject()
    }

    class TimeSlot_model {
        +id : integer
        +service_id : foreignId
        +date : date
        +start_time : time
        +end_time : time
        +is_available : boolean
        +created_at : timestamp
        +updated_at : timestamp
        +book()
        +release()
    }

    %% -------------- Strategy Pattern for Pricing --------------
    class PricingModel {
        <<interface>>
        +calculatePrice(service, date, duration)
    }

    class TimeSlotsPricing {
        +calculatePrice(service, date, duration)
    }
    class HourRatePricing {
        +calculatePrice(service, date, duration)
    }

    %% -------------- Service Layer Classes --------------
    class VenueManagementService {
        +createVenue(venueData)
        +updateVenue(venueId, data)
        +deleteVenue(venueId)
        +getVenue(venueId)
        +searchVenues(criteria)
        +checkAvailability(venueId, date, timeSlot)
        +getVenuesByOwner(ownerId)
        +updateVenueStatus(venueId, status)
    }

    class EventServiceManagementService {
        +createEventService(serviceData)
        +updateEventService(serviceId, data)
        +deleteEventService(serviceId)
        +getEventService(serviceId)
        +searchEventServices(criteria)
        +checkAvailability(serviceId, date, timeSlot)
        +getServicesByOwner(ownerId)
        +updateServiceStatus(serviceId, status)
    }

    class ReviewManagementService {
        +createReview(reviewData)
        +updateReview(reviewId, data)
        +deleteReview(reviewId)
        +getReviewsForService(serviceId)
        +approveReview(reviewId)
        +rejectReview(reviewId)
        +calculateServiceRating(serviceId)
        +getReviewsByUser(userId)
    }

    class TimeSlotManagementService {
        +createTimeSlot(timeSlotData)
        +updateTimeSlot(timeSlotId, data)
        +deleteTimeSlot(timeSlotId)
        +getAvailableSlots(serviceId, date)
        +bookTimeSlot(timeSlotId)
        +releaseTimeSlot(timeSlotId)
        +getTimeSlotsByService(serviceId)
    }

    %% =============== RELATIONSHIPS ===============

    %% Model Relationships
    User_model "1" --> "*" Service_model : "owns"
    Service_model <|-- Venue_model : "extends"
    Service_model <|-- EventService_model : "extends"
    Service_model "1" --> "*" TimeSlot_model : "has many"
    Service_model "1" --> "*" Review_model : "receives"
    Review_model --> User_model : "written by"
    Review_model --> Service_model : "about"

    %% Strategy Pattern Relationships
    Service_model ..> PricingModel : "uses"
    PricingModel <|.. TimeSlotsPricing : "implements"
    PricingModel <|.. HourRatePricing : "implements"

    %% Service Layer Dependencies
    VenueManagementService ..> Venue_model : "manages"
    VenueManagementService ..> TimeSlotManagementService : "uses"
    EventServiceManagementService ..> EventService_model : "manages"
    EventServiceManagementService ..> TimeSlotManagementService : "uses"
    ReviewManagementService ..> Review_model : "manages"
    TimeSlotManagementService ..> TimeSlot_model : "manages"

    %% =============== NOTES ===============
    note for Service_model "Abstract base class for all bookable services"
    note for EventService_model "Specific services like DJs, caterers, photographers"
    note for Venue_model "Physical locations for events"
    note for VenueManagementService "Business logic for venue operations"
    note for EventServiceManagementService "Business logic for event service operations" 