classDiagram
    direction LR
    
    %% =============== PART 2E: API CONTROLLERS & MVC LAYER ===============

    %% -------------- Service Layer References (External) --------------
    class AuthenticationService {
        +login(credentials)
        +register(userData, role)
        +logout(userId)
    }

    class CustomerService {
        +getProfile(customerId)
        +updateProfile(customerId, data)
        +getDashboardData(customerId)
    }

    class VendorService {
        +getProfile(vendorId)
        +updateProfile(vendorId, data)
        +getDashboardData(vendorId)
    }

    class AdminService {
        +getAllUsers()
        +getAllBookings()
        +getDashboardData(adminId)
    }

    class VenueManagementService {
        +createVenue(venueData)
        +getVenue(venueId)
        +searchVenues(criteria)
    }

    class EventServiceManagementService {
        +createEventService(serviceData)
        +getEventService(serviceId)
        +searchEventServices(criteria)
    }

    class ReviewManagementService {
        +createReview(reviewData)
        +getReviewsForService(serviceId)
        +approveReview(reviewId)
    }

    class CartService {
        +getCart(userId)
        +addItemToCart(userId, serviceId, eventId, quantity)
        +clearCart(userId)
    }

    class BookingService {
        +processCartCheckout(cartId)
        +confirmBooking(bookingId)
        +getUserBookings(userId)
    }

    class PaymentService {
        +createPayment(bookingId, amount, paymentMethod)
        +processPayment(paymentId)
        +refundPayment(paymentId, amount)
    }

    %% -------------- Authentication Controllers --------------
    class AuthController {
        +login(request) : JsonResponse
        +register(request) : JsonResponse
        +logout() : JsonResponse
        +refresh() : JsonResponse
        +forgotPassword(request) : JsonResponse
        +resetPassword(request) : JsonResponse
    }

    class UserController {
        +profile() : JsonResponse
        +updateProfile(request) : JsonResponse
        +dashboard() : JsonResponse
        +changePassword(request) : JsonResponse
    }

    %% -------------- Service Management Controllers --------------
    class VenueController {
        +index() : JsonResponse
        +show(id) : JsonResponse
        +store(request) : JsonResponse
        +update(id, request) : JsonResponse
        +destroy(id) : JsonResponse
        +search(request) : JsonResponse
        +availability(id, request) : JsonResponse
    }

    class ServiceController {
        +index() : JsonResponse
        +show(id) : JsonResponse
        +store(request) : JsonResponse
        +update(id, request) : JsonResponse
        +destroy(id) : JsonResponse
        +search(request) : JsonResponse
        +availability(id, request) : JsonResponse
    }

    class ReviewController {
        +index(serviceId) : JsonResponse
        +store(request) : JsonResponse
        +update(id, request) : JsonResponse
        +destroy(id) : JsonResponse
        +approve(id) : JsonResponse
    }

    %% -------------- Shopping & Booking Controllers --------------
    class CartController {
        +show() : JsonResponse
        +addItem(request) : JsonResponse
        +removeItem(itemId) : JsonResponse
        +clear() : JsonResponse
        +checkout() : JsonResponse
    }

    class BookingController {
        +index() : JsonResponse
        +show(id) : JsonResponse
        +confirm(id) : JsonResponse
        +cancel(id) : JsonResponse
        +complete(id) : JsonResponse
    }

    class PaymentController {
        +process(request) : JsonResponse
        +status(id) : JsonResponse
        +refund(id) : JsonResponse
        +webhook(request) : JsonResponse
    }

    %% -------------- Admin & Vendor Controllers --------------
    class AdminController {
        +dashboard() : JsonResponse
        +users() : JsonResponse
        +bookings() : JsonResponse
        +payments() : JsonResponse
        +reports() : JsonResponse
        +approveVendor(id) : JsonResponse
    }

    class VendorController {
        +dashboard() : JsonResponse
        +services() : JsonResponse
        +bookings() : JsonResponse
        +earnings() : JsonResponse
        +reviews() : JsonResponse
        +updateServiceStatus(serviceId, request) : JsonResponse
    }

    %% =============== RELATIONSHIPS (Controller â†’ Service ONLY) ===============

    %% Authentication Controller Dependencies
    AuthController ..> AuthenticationService : "uses"
    UserController ..> CustomerService : "uses"
    UserController ..> VendorService : "uses"
    UserController ..> AdminService : "uses"

    %% Service Management Controller Dependencies
    VenueController ..> VenueManagementService : "uses"
    ServiceController ..> EventServiceManagementService : "uses"
    ReviewController ..> ReviewManagementService : "uses"

    %% Shopping & Booking Controller Dependencies
    CartController ..> CartService : "uses"
    BookingController ..> BookingService : "uses"
    PaymentController ..> PaymentService : "uses"

    %% Admin & Vendor Controller Dependencies
    AdminController ..> AdminService : "uses"
    AdminController ..> BookingService : "uses"
    AdminController ..> PaymentService : "uses"
    VendorController ..> VendorService : "uses"
    VendorController ..> EventServiceManagementService : "uses"
    VendorController ..> BookingService : "uses"

    %% =============== NOTES ===============
    note for AuthController "Handles user authentication and authorization"
    note for BookingController "Manages booking lifecycle operations"
    note for AdminController "Administrative operations and reporting"
    note for VendorController "Vendor-specific operations and analytics"
    note for UserController "Multi-role user management through services" 